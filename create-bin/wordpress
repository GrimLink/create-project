#!/bin/bash

RESET='\033[0m'
GREEN='\033[1;32m'
WPNAME="$1"
GITNAME="$(git config --global --get user.name | head -n1 | cut -d " " -f1)"
GITEMAIL="$(git config --global --get user.email)"

# Check if dependacy exist
if ! command -v wp &> /dev/null; then
  echo "wp-cli is not installed please install it via https://wp-cli.org/" &&
  exit;
fi

if [[ -z "$WPNAME" ]]; then
  echo "The WP install requires a name" && exit
fi

# Setup for instalation
read -p "DB Host (localhost) or: " DBHOST
if [[ -z "$DBHOST" ]]; then DBHOST="localhost"; fi
read -p "DB name: ${WPNAME} or " DBNAME
if [[ -z "$DBNAME" ]]; then
  if [[ -n "$WPNAME" ]]; then
    DBNAME="${WPNAME}"
  else
    echo "The DBName is required" && exit
  fi
fi

read -p "DB User (root) or: " DBUSER
if [[ -z "$DBUSER" ]]; then DBUSER="root"; fi
read -p "DB Password (root) or: " DBPASS
if [[ -z "$DBPASS" ]]; then DBPASS="root"; fi

if command -v valet &> /dev/null; then
  valet db create $DBNAME
else
  echo "First create a datebase for you Wordpress project"
  read -rsn1 -p "When ready, press any key to continue"
fi

echo "Set URL"
echo " - empty = http://${DBNAME}.test/"
echo " - s or secure = https://${DBNAME}.test/"
echo " - Or use your own"
read URL
if [[ -z "$URL" ]]; then
  URL="http://${DBNAME}.test/"
elif [[ "$URL" == "s" ]] || [[ "$URL" == "secure" ]]; then
  URL="https://${DBNAME}.test/"
  if command -v valet &> /dev/null; then valet secure; fi
fi

read -p "Email (${GITEMAIL}) or: " USEREMAIL
if [[ -z "$USEREMAIL" ]]; then USEREMAIL="$GITEMAIL"; fi
read -p "Admin name (${GITNAME}) or: " USERNAME
if [[ -z "$USERNAME" ]]; then USERNAME="$GITNAME"; fi
read -sp "Password (admin123) or: " USERPASS
if [[ -z "$USERPASS" ]]; then USERPASS="admin123"; fi
echo ""

# Run isntallation
mkdir $WPNAME &&
cd $WPNAME &&
wp core download &&
wp core config \
  --dbname=$DBNAME \
  --dbuser=$DBUSER \
  --dbpass=$DBPASS \
  --dbhost=$DBHOST \
  --dbprefix="wp_" &&

wp core install \
  --url="${URL}" \
  --title="${WPNAME}" \
  --admin_user="${USERNAME}" \
  --admin_password="${USERPASS}" \
  --admin_email="${USEREMAIL}" \
  --skip-email

# Set permalink structure to make endpoints work
wp option update permalink_structure '/%postname%'

# Check if the installation went well
if [ ! -d "wp-content" ]; then
  echo "Something went wrong, no wp-content folder found found"
  exit;
fi;

# Add aditonal plugins
read -p "Also run WP config steps [Y/n] " -n 1;
echo "";
if [[ ! $REPLY =~ ^[Nn]$ ]]; then
  read -p "Add Duplicate Post? [N/y] " -n 1;
  echo "";
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    wp plugin install disable-json-api
    wp plugin activate disable-json-api
  fi;

  read -p "Add Disable Rest Api? [N/y] " -n 1;
  echo "";
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    wp plugin install disable-json-api
    wp plugin activate disable-json-api
  fi;

  read -p "Add GraphQL Api? [N/y] " -n 1;
  echo "";
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    cd wp-content/plugins &&
    git clone git@github.com:wp-graphql/wp-graphql.git
    cd ../..
    wp plugin activate wp-graphql
    echo "You can test your endpoint via /graphql";
  fi;
fi;