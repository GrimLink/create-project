#!/bin/bash

GITNAME="$(git config --global --get user.name | head -n1 | cut -d " " -f1)"
GITEMAIL="$(git config --global --get user.email)"
NAME="$1"
DOMAIN="test"
ADMINNAME="$(echo "$GITNAME" | tr '[:upper:]' '[:lower:]')"
ADMINPASS="admin123$"
SKIP="false"
SECURE="true"
LARAVEL_VALET="false"
WEPROVIDE_VALET="false"

RESET='\033[0m'
BOLD='\033[1m'

NAME="$1"
SWVERSION="6.4"

DEFAULT_DBHOST="localhost"
DEFAULT_DBUSER="root"
DEFAULT_DBPASS="root"

PLUGINS=(
  frosh/development-helper
  yireo/shopware6-additional-user-commands
  yireo/shopware6-additional-config-commands
  yireo/shopware6-command-system-info
);

SWPLUGINS_ACTIVATE=(
  FroshDevelopmentHelper
  YireoAdditionalUserCommands
  YireoAdditionalConfigCommands  
  YireoCommandSystemInfo
);

if [[ -z "$NAME" ]]; then
  echo "Shopware needs a project name" && exit
fi

if [[ $(valet -V | cut -f1,2 -d ' ') == "Laravel Valet" ]]; then
  DEFAULT_DBHOST="127.0.0.1"
  LARAVEL_VALET="true"
fi

if [[ $(valet -V | cut -f1 -d ' ') == "Valet+" ]]; then
  WEPROVIDE_VALET="true"
fi

echo "What Shopware version do want to install?"
echo "  - empty = 6.4 latest"
echo "  Or use your own shopware version"
read -p "Version: " VERSION
if [[ -n "$VERSION" ]]; then
  echo "Using shopware $VERSION"
  SWVERSION="$VERSION"
else
  echo "Using shopware $SWVERSION"
fi

read -p "Run quick install? [Y/n] " && echo ""
if [[ ! $REPLY =~ ^[nN]|[nN][oO]$ ]]; then
  SKIP="true"
fi

# composer create-project shopware/production:$SWVERSION $NAME
git clone -b 6.4.12.0 https://github.com/shopware/production $NAME
cd $NAME

# Setup for instalation
if [[ $SKIP == "false" ]]; then
  read -p "DB Host (${DEFAULT_DBHOST}) or: " DBHOST && echo ""
  read -p "DB name: ${NAME} or " DBNAME && echo ""
  read -p "DB User (${DEFAULT_DBUSER}) or: " DBUSER && echo ""
  read -p "DB Password (${DEFAULT_DBPASS}) or: " DBPASS && echo ""
fi

if [[ -z "$DBHOST" ]]; then DBHOST="${DEFAULT_DBHOST}"; fi
if [[ -z "$DBNAME" ]]; then DBNAME="${NAME}"; fi
if [[ -z "$DBUSER" ]]; then DBUSER="${DEFAULT_DBUSER}"; fi
if [[ -z "$DBPASS" ]]; then DBPASS="${DEFAULT_DBPASS}"; fi

MYSQL="mysql -u $DBUSER --password=${DBPASS} --socket /tmp/mysql_3306.sock"

if command -v valet &> /dev/null; then
  if [[ $LARAVEL_VALET == "true" ]]; then
    echo "creating new database"
    $MYSQL -e "DROP DATABASE \`${DBNAME}\`;"
    $MYSQL -e "CREATE DATABASE \`${DBNAME}\`;"
  elif [[ $WEPROVIDE_VALET == "true" ]]; then
    echo "creating new database"
    valet db create $DBNAME
  fi
elif command -v mysql &> /dev/null; then
  echo "creating new database"
  $MYSQL -e "DROP DATABASE \`${DBNAME}\`;"
  $MYSQL -e "CREATE DATABASE \`${DBNAME}\`;"
else
  echo "First create a datebase for you Shopware project"
  read -rsn1 -p "When ready, press any key to continue"
fi

if [[ $SECURE == "true" ]]; then
  URL="https://${NAME}.${DOMAIN}/"
  if command -v valet &> /dev/null; then
    echo "Setting domain ssl certificate"
    valet secure $NAME
  fi
else
  URL="http://${NAME}.${DOMAIN}/"
fi

echo "Adjusting composer settings to allow dev packages"
composer config minimum-stability dev
composer config prefer-stable true

echo "Setting up local composer folder"
mkdir -p package-source
composer config repositories.local-packages path package-source/*/*

echo "Adding Shopware plugins"
if [[ $SKIP == "true" ]]; then
  for i in "${PLUGINS[@]}"; do
    composer require $i
  done;
else
  for i in "${PLUGINS[@]}"; do
    read -p "Also install $i? [Y/n] " && echo ""
    if [[ ! $REPLY =~ ^[nN]|[nN][oO]$ ]]; then
      composer require $i
    fi
  done;
fi

composer install

touch .shopware-valet
echo '.shopware-valet' >> .gitignore

bin/console system:setup -n \
  --generate-jwt-keys \
  --app-env="dev" \
  --app-url="https://${NAME}.test" \
  --database-url="mysql://${DBUSER}:${DBPASS}@${DBHOST}:3306/${NAME}" \
  --http-cache-enabled="0"

bin/console system:install --basic-setup

if [[ $SKIP == "true" ]]; then
  echo ""
else
  # TODO check why you need this?
  read -p "Also run build admin and Store ? [Y/n] "
  echo ""
  if [[ ! $REPLY =~ ^[nN]|[nN][oO]$ ]]; then
    bin/build-administration.sh
    bin/build-storefront.sh
  fi;
fi

HTACCESS=.htaccess
echo 'RewriteCond %{HTTPS} !=on [or]' >> $HTACCESS
echo -e "RewriteCond %{HTTP_HOST} (^${NAME}\.test$)" >> $HTACCESS
echo -e "RewriteRule (.*) https://${NAME}\.test}%{REQUEST_URI} [L,R=301]" >> $HTACCESS

bin/console plugin:refresh
if [[ $SKIP == "true" ]]; then
  for i in "${SWPLUGINS_ACTIVATE[@]}"; do
    bin/console plugin:install --activate $i
  done;
else
  for i in "${SWPLUGINS_ACTIVATE[@]}"; do
    read -p "Also activate $i? [Y/n] " && echo ""
    if [[ ! $REPLY =~ ^[nN]|[nN][oO]$ ]]; then
      bin/console plugin:install --activate $i
    fi
  done;
fi

bin/console user:create \
  --admin \
  --email="${GITEMAIL}" \
  --firstName="${GITNAME}" \
  --lastName="Admin" \
  --password="${ADMINPASS}" \
  --no-interaction \
  $ADMINNAME

bin/console user:delete --username=admin

bin/console cache:clear